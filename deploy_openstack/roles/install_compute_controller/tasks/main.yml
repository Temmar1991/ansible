---

- name: Crteate database for glance
  mysql_db:
    login_host: "{{ os_management_ip }}"
    login_password: "{{os_root_mysql_pass}}"
    login_user: root
    name: "{{ item }}"
    state: present
  with_items:
    - "nova_api"
    - "nova"
    - "nova_cell0"

- name: Grant privilleges to nova user
  mysql_user:
    login_user: root
    login_password: "{{ os_root_mysql_pass }}"
    name: nova
    password: "{{ nova_db_pass }}"
    priv: 'nova_api.*:ALL/nova.*:ALL/nova_cell0.*:ALL'
    host: "{{ item }}"
    state: present
  with_items:
    - 'localhost'
    - '%'


- name: Create user nova
  os_user:
    name: nova
    domain: default
    password: "{{ nova_user_pass }}"
    state: present
    update_password: on_create

- name: Add nova user to admin role
  os_user_role:
    role: admin
    user: nova
    project: service
    state: present


- name: Create service nova
  os_keystone_service:
    name: nova
    service_type: compute
    description: "OpenStack Compute"
    state: present

- name: Create endpoints for nova
  os_keystone_endpoint: 
    service: nova
    url: "http://controller:8774/v2.1"
    region: RegionOne
    endpoint_interface: "{{ item }}"
    state: present
  with_items:
    - "public"
    - "internal"
    - "admin"


- name: Create user placement
  os_user:
    name: placement
    domain: default
    password: "{{ placement_user_pass }}"
    state: present
    update_password: on_create


- name: Add nova user to admin role
  os_user_role:
    role: admin
    user: placement
    project: service
    state: present

- name: Create service placement
  os_keystone_service:
    name: placement
    service_type: placement
    description: "Placement API"
    state: present

- name: Create endpoints for placement
  os_keystone_endpoint:
    service: placement
    url: "http://controller:8780"
    region: RegionOne
    endpoint_interface: "{{ item }}"
    state: present
  with_items:
    - "public"
    - "internal"
    - "admin"



- name: Install nova components
  yum:
    name:
      - openstack-nova-api
      - openstack-nova-conductor
      - openstack-nova-console
      - openstack-nova-novncproxy
      - openstack-nova-scheduler
      - openstack-nova-placement-api
    state: present
  register: nova_pack_status
  
- name: Configure nova
  ini_file: 
    path: "/etc/nova/nova.conf"
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - { section: 'DEFAULT', option: 'enabled_apis', value: 'osapi_compute,metadata' }
    - { section: 'DEFAULT', option: 'transport_url', value: 'rabbit://openstack:{{ os_rabbit_mq_openstack_pass }}@controller' }
    - { section: 'DEFAULT', option: 'my_ip', value: "{{ os_management_ip }}" }
    - { section: 'DEFAULT', option: 'use_neutron', value: 'True' }
    - { section: 'DEFAULT', option: 'firewall_driver', value: 'nova.virt.firewall.NoopFirewallDriver' }
    - { section: 'api_database', option: 'connection', value: 'mysql+pymysql://nova:{{ nova_db_pass }}@controller/nova_api' }
    - { section: 'database', option: 'connection', value: 'mysql+pymysql://nova:{{ nova_db_pass }}@controller/nova' }
    - { section: 'api', option: 'auth_strategy', value: 'keystone' }    
    - { section: 'keystone_authtoken', option: 'auth_uri', value: 'http://controller:5000' }
    - { section: 'keystone_authtoken', option: 'auth_url', value: 'http://controller:35357' }
    - { section: 'keystone_authtoken', option: 'memcached_servers', value: 'controller:11211' }
    - { section: 'keystone_authtoken', option: 'auth_type', value: 'password' }
    - { section: 'keystone_authtoken', option: 'project_domain_name', value: 'default' }
    - { section: 'keystone_authtoken', option: 'user_domain_name', value: 'default' }
    - { section: 'keystone_authtoken', option: 'project_name', value: 'service' }
    - { section: 'keystone_authtoken', option: 'username', value: 'nova' }
    - { section: 'keystone_authtoken', option: 'password', value: "{{ nova_user_pass }}" }
    - { section: 'vnc', option: 'enabled ', value: 'true' }
    - { section: 'vnc', option: 'vncserver_listen', value: '$my_ip' }
    - { section: 'vnc', option: 'vncserver_proxyclient_address', value: '$my_ip' }
    - { section: 'glance', option: 'api_servers', value: 'http://controller:9292' }
    - { section: 'oslo_concurrency', option: 'lock_path', value: '/var/lib/nova/tmp' }
    - { section: 'placement', option: 'os_region_name', value: 'RegionOne' }
    - { section: 'placement', option: 'project_domain_name', value: 'Default' }
    - { section: 'placement', option: 'project_name', value: 'service' }
    - { section: 'placement', option: 'auth_type', value: 'password' }
    - { section: 'placement', option: 'user_domain_name', value: 'default' }
    - { section: 'placement', option: 'auth_url', value: 'http://controller:35357/v3' }
    - { section: 'placement', option: 'username', value: 'placement' }
    - { section: 'placement', option: 'password', value: "{{ placement_user_pass }}" }

- name: Copy nova-placement-api conf
  copy:
    src: placement-api.conf
    dest: /etc/httpd/conf.d/00-nova-placement-api.conf
  notify:
    - Restart_httpd

    
- name: Populate database for nova-api
  become: true
  become_user: nova
  shell: "nova-manage api_db sync"
  register: stat_nova_api_database
 # when: nova_pack_status.changed

- name: Register the cell0 database
  become: true
  become_user: nova
  shell: "nova-manage cell_v2 map_cell0"
  register: reg_cell0_status
  when: stat_nova_api_database.rc == 0


- name: Create the cell1 cell
  become: true
  become_user: nova
  shell: "nova-manage cell_v2 create_cell --name=cell1"
  when: nova_pack_status.changed


- name: Populate nova database
  become: true
  become_user: nova
  shell: "nova-manage db sync"
  

- name: Check registers nova0 and nova1
  shell: "nova-manage cell_v2 list_cells"
  register: check_registers

- name: Show results of check
  debug: var=check_registers.stdout_lines
  
- name: Enable and restart glance services
  systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - openstack-nova-api
    - openstack-nova-consoleauth
    - openstack-nova-scheduler
    - openstack-nova-conductor
    - openstack-nova-novncproxy
     

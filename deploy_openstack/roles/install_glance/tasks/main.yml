---

- name: Crteate database for glance
  mysql_db:
    login_host: "{{ os_management_ip }}"
    login_password: "{{os_root_mysql_pass}}"
    login_user: root
    name: glance
    state: present

- name: Grant privilleges to glance user
  mysql_user:
    login_user: root
    login_password: "{{ os_root_mysql_pass }}"
    name: glance
    password: "{{ glance_db_pass }}"
    priv: 'glance.*:ALL'
    host: "{{ item }}"
    state: present
  with_items:
    - 'localhost'
    - '%'
  
- name: Create user glance
  os_user:
    name: glance
    domain: default
    password: "{{ glance_user_pass }}"
    state: present
    update_password: on_create

- name: Add glance user to admin role
  os_user_role:
    role: admin
    user: glance
    project: service
    state: present


- name: Create service glance
  os_keystone_service:
    name: glance
    service_type: image
    description: "OpenStack Image"
    state: present

- name: Create endpoints for flance
  os_keystone_endpoint: 
    service: glance
    url: "http://controller:9292"
    region: RegionOne
    endpoint_interface: "{{ item }}"
    state: present
  with_items:
    - "public"
    - "internal"
    - "admin"

- name: Install glance component
  yum:
    name: openstack-glance
    state: present
  register: glance_pack_status
  
- name: Configure glance-api
  ini_file: 
    path: "/etc/glance/glance-api.conf"
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - { section: 'database', option: 'connection', value: 'mysql+pymysql://glance:{{ glance_db_pass  }}@controller/glance' }
    - { section: 'keystone_authtoken', option: 'auth_uri', value: 'http://controller:5000' }
    - { section: 'keystone_authtoken', option: 'auth_url', value: 'http://controller:35357' }
    - { section: 'keystone_authtoken', option: 'memcached_servers', value: 'controller:11211' }
    - { section: 'keystone_authtoken', option: 'auth_type', value: 'password' }
    - { section: 'keystone_authtoken', option: 'project_domain_name', value: 'default' }
    - { section: 'keystone_authtoken', option: 'user_domain_name', value: 'default' }
    - { section: 'keystone_authtoken', option: 'project_name', value: 'service' }
    - { section: 'keystone_authtoken', option: 'username', value: 'glance' }
    - { section: 'keystone_authtoken', option: 'password', value: "{{ glance_user_pass }}" }
    - { section: 'paste_deploy', option: 'flavor', value: 'keystone' }
    - { section: 'glance_store', option: 'stores', value: 'file,http' }
    - { section: 'glance_store', option: 'default_store', value: 'file' }
    - { section: 'glance_store', option: 'filesystem_store_datadir', value: '/var/lib/glance/images/' }
 
- name: Configure glance-registry
  ini_file:
    path: "/etc/glance/glance-registry.conf"
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - { section: 'database', option: 'connection', value: 'mysql+pymysql://glance:{{ glance_db_pass  }}@controller/glance' }
    - { section: 'keystone_authtoken', option: 'auth_uri', value: 'http://controller:5000' }
    - { section: 'keystone_authtoken', option: 'auth_url', value: 'http://controller:35357' }
    - { section: 'keystone_authtoken', option: 'memcached_servers', value: 'controller:11211' }
    - { section: 'keystone_authtoken', option: 'auth_type', value: 'password' }
    - { section: 'keystone_authtoken', option: 'project_domain_name', value: 'default' }
    - { section: 'keystone_authtoken', option: 'user_domain_name', value: 'default' }
    - { section: 'keystone_authtoken', option: 'project_name', value: 'service' }
    - { section: 'keystone_authtoken', option: 'username', value: 'glance' }
    - { section: 'keystone_authtoken', option: 'password', value: "{{ glance_user_pass }}" }
    - { section: 'paste_deploy', option: 'flavor', value: 'keystone' }
    

- name: Populate database for glance
  become: true
  become_user: glance
  shell: "glance-manage db_sync"
  when: glance_pack_status.changed


- name: Enable and restart glance services
  systemd:
    name: "{{ item }}"
    state: restarted
    enabled: yes
  with_items:
    - openstack-glance-api
    - openstack-glance-registry     
